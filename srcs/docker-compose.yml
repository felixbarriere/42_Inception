version: ‘3’
services:
  mariadb:
    container_name: mariadb
    networks:
      - inception            	  # à quel network il appartient
    build:
      context: requirements/mariadb
      dockerfile: Dockerfile
    env_file: .env                
    volumes:
      - mariadb_volume:/var/lib/mysql
    restart: unless-stopped         # redémarre tant qu'il n'est pas stoppé 
    expose:                         # le port à exposer
      - "3306"
  nginx:
    container_name: nginx
    volumes:
      - wordpress_volume:/var/www/html
    networks:
      - inception
    depends_on:        		   # ne pas démarrer NGINX avant WordPress
      - wordpress
    build: 
      context: requirements/nginx
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "443:443" 		# port qui sera exposé a la machine locale
    restart: on-failure 	# le container redémarrera uniquement en cas de crash.
  wordpress:
    container_name: wordpress
    env_file: .env
    volumes:
      - wordpress_volume:/var/www/html
    networks:
      - inception
    build: 
      context: requirements/wordpress
      dockerfile: Dockerfile
    depends_on:    		      # WordPress démarrera uniquement après MariaDB
      - mariadb
    restart: on-failure
    expose: 
      - "9000"

volumes:
  wordpress_volume:
    driver: local 
    driver_opts:
      type: 'none' 			        # aucun type spécifique
      o: 'bind'
      device: '/home/fbarrier/data/wordpress' 	#stockage en local
  mariadb_volume:
    driver: local
    driver_opts:
      type: bind 
      o: 'bind'	                                # Les Bind Mounts sont des volumes qui se montent sur un chemin d'accès à l'hôte, et ils peuvent être modifiés par d'autres processus en dehors de docker.
      device: '/home/fbarrier/data/mariadb'	  #stockage en local

networks:
  inception:
    driver: bridge


